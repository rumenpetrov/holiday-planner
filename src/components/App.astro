---
import i18next, { t } from 'i18next';
import { HeadHrefLangs } from 'astro-i18next/components';
export interface Props {
  title: string;
}

const { title } = Astro.props;
---
<!DOCTYPE html>
<html lang={i18next.language}>
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}favicon.svg`} />
    <link rel="manifest" href="/app.webmanifest" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="color-scheme" content="light dark">

    <title>{title}</title>
    <meta name="description" content={t('GLOBAL.PROJECT_NAME')} />
    <meta name="generator" content={Astro.generator} />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cormorant+Infant:ital,wght@0,400;0,700;1,400;1,700&family=Sofia+Sans:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap" rel="stylesheet">

    <HeadHrefLangs />
  </head>
  <body id="body">
    <slot />
  </body>
</html>

<script is:inline>
  const colorSchemeTriggerElement = document.querySelector('#color-scheme-trigger');
  const rootElement = document.documentElement;
  const colorSchemeDefaultValue = 'light';

  const getColorScheme = () => {
    const storedValue = localStorage.getItem('colorScheme');
    const isLight = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches;
    const isDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;

    if (storedValue) {
      return storedValue;
    } else if (isLight) {
      return 'light';
    } else if (isDark) {
      return 'dark';
    }

    return colorSchemeDefaultValue;
  }

  const setColorScheme = (colorScheme = colorSchemeDefaultValue) => {
    rootElement.dataset.colorScheme = colorScheme;

    localStorage.setItem('colorScheme', colorScheme);
  }

  setColorScheme(getColorScheme());


  colorSchemeTriggerElement.addEventListener('click', () => {
    const colorScheme = getColorScheme();

    if (colorScheme === 'light') {
      setColorScheme('dark');
    } else if (colorScheme === 'dark') {
      setColorScheme('light');
    }
  });

  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
    setColorScheme(event.matches ? 'dark' : 'light');
  });
</script>

<style is:global>
  * {
    padding: 0;
    margin: 0;
    outline: 0;
  }

  :root,
  :root[data-color-scheme="light"] {
    color-scheme: light;

    --space-size-100: 0.25rem;
    --space-size-200: 0.5rem;
    --space-size-300: 0.75rem;
    --space-size-400: 1rem;
    --space-size-500: 1.25rem;
    --space-size-600: 1.5rem;
    --space-size-700: 1.75rem;
    --space-size-800: 2rem;

    --font-family-primary: 'Sofia Sans', sans-serif;
    --font-family-secondary: 'Cormorant Infant', serif;
    --font-size-h1: 4.209rem;
    --font-size-h2: 3.157rem;
    --font-size-h3: 2.369rem;
    --font-size-h4: 1.777rem;
    --font-size-h5: 1.333rem;
    --font-size-p: 1rem;
    --font-size-small: 0.75rem;

    /* 60% Backgrounds mainly (light/dark) */
    --palette-dominant: #f0eddb;
    --palette-dominant-contrast: #0e0d06;
    --palette-primary: #fb5e09;
    --palette-primary-contrast: var(--palette-dominant-contrast);
    --palette-secondary: #FFF6C0;
    --palette-secondary-contrast: var(--palette-dominant-contrast);
    --palette-accent: #F5CB5C;
    --palette-accent-contrast: var(--palette-dominant-contrast);
    --palette-semantic-success: #00ff00;
    --palette-semantic-warning: #ffff00;
    --palette-semantic-error: #ff0000;
    --palette-semantic-info: #0000ff;

    /* blocks */
    --block-logo-gradient-top: #fb5e09;
    --block-logo-gradient-bottom: #F5CB5C;
    --block-pad-background: var(--palette-secondary);
    --block-pad-color: var(--palette-secondary-contrast);
    --block-calendar-timeline-color: var(--palette-dominant-contrast);
    --block-calendar-background: var(--palette-dominant);
    --block-calendar-color: var(--palette-dominant-contrast);
    --block-calendar-holiday-background: var(--palette-accent);
    --block-calendar-holiday-color: var(--palette-accent-contrast);
    --block-calendar-suggestion-background: var(--palette-secondary);
    --block-calendar-suggestion-color: var(--palette-secondary-contrast);
    --block-calendar-th-border-color: var(--palette-secondary);
    --block-calendar-td-border-color: transparent;
    --block-calendar-weekend-background: var(--palette-dominant);
    --block-calendar-weekend-color: #aaa;
    --block-calendar-pre-post-color: #aaa;
  }

  :root[data-color-scheme="dark"] {
    color-scheme: dark;

    /* 60% Backgrounds mainly (light/dark) */
    --palette-dominant: #060604;
    --palette-dominant-contrast: #f9f8f1;
    --palette-primary: #f65904;
    --palette-primary-contrast: var(--palette-dominant);
    --palette-secondary: #292304;
    --palette-secondary-contrast: var(--palette-dominant-contrast);
    --palette-accent: #FFD800;
    --palette-accent-contrast: var(--palette-dominant);
    --palette-semantic-success: #00ff00;
    --palette-semantic-warning: #ffff00;
    --palette-semantic-error: #ff0000;
    --palette-semantic-info: #0000ff;

    /* blocks */
    --block-logo-gradient-top: #F65904;
    --block-logo-gradient-bottom: #FCDB22;
    --block-pad-background: var(--palette-secondary);
    --block-pad-color: var(--palette-secondary-contrast);
    --block-calendar-timeline-color: var(--palette-dominant-contrast);
    --block-calendar-background: var(--palette-dominant);
    --block-calendar-color: var(--palette-dominant-contrast);
    --block-calendar-holiday-background: var(--palette-accent);
    --block-calendar-holiday-color: var(--palette-accent-contrast);
    --block-calendar-suggestion-background: var(--palette-secondary);
    --block-calendar-suggestion-color: var(--palette-secondary-contrast);
    --block-calendar-th-border-color: var(--palette-secondary);
    --block-calendar-td-border-color: transparent;
    --block-calendar-weekend-background: var(--palette-dominant);
    --block-calendar-weekend-color: #aaa;
    --block-calendar-pre-post-color: #aaa;
  }

  *:focus-visible {
    outline: 1px solid var(--palette-accent);
  }

  ::selection {
    background-color: var(--palette-accent);
    color: var(--palette-accent-contrast);
  }

  @supports (view-transition-name: none) {
    @view-transition {
      navigation: auto;
    }
  }
</style>

<style>
  html {
    accent-color: var(--palette-accent);
    overflow-x: hidden;
    overflow-y: scroll;
    background: var(--palette-dominant);
    font-family: var(--font-family-primary);
    font-size: 80%;
    color: var(--palette-dominant-contrast);
  }

  @media (min-width: 500px) {
    html {
      font-size: 100%;
    }
  }

  body {
    font-size: 1rem;
    padding-bottom: 80px;
  }
</style>
