---
export interface Props {
  element?: string;
  appearance?: 'h1' | 'h2' | 'h3' | 'h4' | 'p';
  font?: 'primary' | 'secondary';
  disableMarginBottom?: boolean;
  style?: Object;
};

const {
  element = 'p',
  appearance = 'p',
  font,
  disableMarginBottom = false,
  ...extraProps
} = Astro.props;

const classListRoot = [
  appearance,
  { 'font-primary': font === 'primary' },
  { 'font-secondary': font === 'secondary' },
  { 'margin-bottom': !disableMarginBottom },
];
---
{element === 'h1' && (
  <h1 class:list={classListRoot} {...extraProps}><slot /></h1>
)}

{element === 'h2' && (
  <h2 class:list={classListRoot} {...extraProps}><slot /></h2>
)}

{element === 'h3' && (
  <h3 class:list={classListRoot} {...extraProps}><slot /></h3>
)}

{element === 'h4' && (
  <h4 class:list={classListRoot} {...extraProps}><slot /></h4>
)}

{element === 'p' && (
  <p class:list={classListRoot} {...extraProps}><slot /></p>
)}

<style>
  .h1,
  .h2,
  .h3,
  .h4 {
    font-family: var(--font-family-secondary);
    line-height: 1;
  }

  .h1 {
    font-size: 4.8rem;
  }
  .h2 {
    font-size: 3.4rem;
  }
  .h3 {
    font-size: 2.4rem;
  }
  .h4 {
    font-size: 2rem;
  }

  .p {
    font-family: var(--font-family-primary);
    font-size: 1.6rem;
    line-height: 1.3;
  }

  .font-primary {
    font-family: var(--font-family-primary);
  }

  .font-secondary {
    font-family: var(--font-family-secondary);
  }

  .margin-bottom {
    margin-bottom: 0.6em;
  }
</style>
