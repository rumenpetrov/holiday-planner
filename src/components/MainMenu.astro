---
import { t } from "i18next";
import Link from "@components/Link.astro";

export interface Props {
  element?: string;
  appearance?: "h1" | "h2" | "h3" | "h4" | "p";
  font?: "primary" | "secondary";
  class?: string;
}

const {
  element = "p",
  appearance = "p",
  font,
  class: className,
  ...rest
} = Astro.props;
---

<nav
  {...rest}
  class:list={[className]}
  aria-label={t("GLOBAL.PRIMARY_NAVIGATION_LABEL")}
>
  <ul>
    <li>
      <Link href="/" class="menu-link">{t("PAGES.HOME.TITLE")}</Link>
    </li>
    <li>
      <Link href="/this-year/" class="menu-link">
        {t("PAGES.THIS_YEAR.TITLE")}
      </Link>
    </li>
    <li>
      <Link href="/next-year/" class="menu-link">
        {t("PAGES.NEXT_YEAR.TITLE")}
      </Link>
    </li>
  </ul>
</nav>

<style>
  nav {
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 10;
    width: 100%;
    border-top: var(--space-size-100) solid var(--palette-primary);
    overflow: auto;
    padding: var(--space-size-400) 0;
    background-color: var(--palette-secondary);
  }

  nav ul {
    display: flex;
    list-style-type: none;
    justify-content: center;
  }

  nav li .menu-link {
    display: block;
    padding: var(--space-size-200) var(--space-size-400);
    margin: 0 var(--space-size-100);
    border-width: 0 0 var(--space-size-100) 0;
    border-style: solid;
    border-color: transparent;
    color: var(--palette-dominant-contrast);
    text-decoration: none;
    text-wrap: nowrap;
  }

  nav li [aria-current="page"],
  nav li:hover .menu-link {
    color: var(--palette-primary);
    border-color: var(--palette-primary);
  }

  @media (min-width: 1200px) {
    nav {
      position: relative;
      width: auto;
      border: 0;
      background-color: transparent;
      padding: var(--space-size-200);
    }

    nav ul {
      flex-wrap: wrap;
    }
  }
</style>

<script>
  // document.addEventListener('astro:page-load', () => {
  const navLinks = document.querySelectorAll("nav a");

  navLinks.forEach((link) => {
    // link.classList.remove('active');
    link.removeAttribute("aria-current");

    const currentPath = window.location.pathname.replace(
      "/holiday-planner",
      "",
    );

    // `link.href` returns a whole url, such as: 'https://somedomain.com/posts/' and we only need the last part
    const hrefArray = link.href.split("/holiday-planner");
    const thisPath = hrefArray[hrefArray.length - 1];

    if (currentPath === thisPath) {
      // link.classList.add('active');
      link.setAttribute("aria-current", "page");
    }
  });
  // });
</script>
